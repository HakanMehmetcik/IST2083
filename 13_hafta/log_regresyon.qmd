---
title: "Logistik Regresyon"
author: "Hakan Mehmetcik"
format: pdf
editor: visual
execute: 
  echo: true
  warning: true
---

## Logisitik Regresyon

**Lojistik regresyon**, bir bağımlı değişkenin **ikili (binary)** veya **çoklu (multinomial)** kategorilerden oluştuğu durumlarda, bu bağımlı değişken ile bir veya birden fazla bağımsız değişken arasındaki ilişkiyi modellemek için kullanılan bir istatistiksel yöntemdir.

### **Özellikleri:**

1.  **Bağımlı Değişken:**

    -   İkili lojistik regresyon: Bağımlı değişken iki kategorilidir (ör., 0 ve 1).

    -   Çoklu lojistik regresyon: Bağımlı değişken birden fazla kategorilidir (ör., A, B, C).

2.  **Bağımsız Değişkenler:**

    -   Sürekli veya kategorik olabilir.

    -   Örneğin, yaş, cinsiyet, eğitim düzeyi.

3.  **Amaç:**

    -   Bağımlı değişkenin belirli bir kategoriye ait olma olasılığını tahmin etmek (ör., "Evet" oyu verme olasılığı).

    -   Bağımsız değişkenlerin bağımlı değişken üzerindeki etkisini ölçmek.

<!-- -->

1.  **Logit Fonksiyonu:**

    -   Lojistik regresyon, bağımlı değişkenin **log-odds**'larını bağımsız değişkenlerle ilişkilendirir:
        $$\text{log}\left(\frac{p}{1-p}\right) = \beta_0 + \beta_1 X_1 + \beta_2 X_2 + \dots + \beta_n X_n $$ ​

        -   ppp: Bağımlı değişkenin 1 olma olasılığı.

        -   1−p: Bağımlı değişkenin 0 olma olasılığı.

        -   β0​: Sabit terim (intercept).

        -   βi​: Bağımsız değişkenlerin katsayıları.

2.  **Odds ve Odds Oranı:**

    -   **Odds:** Bir olayın gerçekleşme olasılığı ile gerçekleşmeme olasılığı arasındaki oran:
        $$\text{Odds} = \frac{p}{1-p}$$ ​

    -   **Odds Oranı (Odds Ratio):** Bir bağımsız değişkendeki bir birimlik artışın bağımlı değişken üzerindeki etkisini gösterir:
        $$\text{Odds Ratio} = e^{\beta}$$

## R'da Lojistik regresyon modeli

logit_model \<- glm(y \~ x1 + x2 + x3, family = binomial, data = my_data)

summary(logit_model)

## Örnek 1:

Bir kişinin kredi alıp alamaması (`kredi_onay` = 0 veya 1) ile geliri (`gelir`) ve kredi puanı (`kredi_puani`) arasındaki ilişkiyi incelemek istiyoruz.

```{r}
# Basit bir veri seti
data <- data.frame(
  kredi_onay = c(0, 1, 0, 1, 0, 1, 1, 0, 1, 0),  # 0 = reddedildi, 1 = onaylandı
  gelir = c(3000, 5000, 2500, 8000, 2000, 7000, 6000, 2200, 9000, 1500),  # Gelir düzeyi
  kredi_puani = c(600, 750, 580, 800, 550, 720, 700, 590, 820, 510)  # Kredi puanı
)

# Veri setini görüntüleme
print(data)

```

#### **Lojistik Regresyon Modeli**

Bağımlı değişken: **`kredi_onay`**\
Bağımsız değişkenler: **`gelir`** ve **`kredi_puani`**

```{r}
# Lojistik regresyon modeli
logit_model <- glm(kredi_onay ~ gelir + kredi_puani, family = binomial, data = data)

# Modelin özetini görüntüleme
summary(logit_model)
```

Katsayılar, bağımsız değişkenlerin bağımlı değişken üzerindeki etkilerini temsil eder. Ancak burada:

-   **Intercept (-169.6):** Çok yüksek bir negatif değerde, ancak bu modelin sorunlu olduğunun bir göstergesi.

-   **`gelir` (0.0087):** Katsayı neredeyse sıfır.

-   **`kredi_puani` (0.2009):** Katsayı yine anlamlı değil.

**Pr(\>\|z\|)** sütunundaki değerler:

-   Tüm değişkenler için **1**, yani bu değişkenlerin bağımlı değişken üzerindeki etkileri istatistiksel olarak anlamlı değil.

-   Bu, modelin bağımsız değişkenleri kullanarak bağımlı değişkeni etkili bir şekilde açıklayamadığını gösteriyor.

Bu model, veri setinizin küçük olması ve bağımsız değişkenlerle bağımlı değişkenin mükemmel ayrışması nedeniyle güvenilir sonuçlar üretememiştir. Şimdi gerçek hayattan bir örnekle logistik regresyon'u inceleyelim.

## Örnek 2: 

Bu alıştırmada ["The Scottish Social Attitudes (SSA) survey"](https://www.gov.scot/collections/scottish-social-attitudes-survey/) ismiyle bilinen ve 1999 yılından bu yana İskoçya'daki insanların sosyal, politik ve ahlaki tutumlarındaki değişiklikleri takip eden bir anket serisinin 2019 yılı anket sonuçlarını kullanacağız.

Bu anket verisi içinde yer alan değişkenler aşağıdaki şekilde:

-   **pserial:** Katılımcıya özgü bir tanımlayıcı.

-   **rsex:** Cinsiyet (ör., "Male" veya "Female").

-   **rage:** Katılımcının yaş kategorisi (ör., 31, 41 gibi).

-   **incsour:** Gelir kaynağı (ör., "Wages/private income source", "State Benefits").

-   **leftrigh:** Sol-sağ siyasi eğilim skalası (ör., 1.2, 2.4 gibi sürekli değerler).

-   **libauth:** Liberal-otoriter eğilim skalası (ör., 2.833, 4.0 gibi sürekli değerler).

-   **employment:** Katılımcının istihdam durumu (ör., "3. Employed", "5. Permanently Sick/Disabled").

-   **employmentdum:** İstihdam durumunun ikili kategorik versiyonu (ör., "1. Employed", "NaN").

-   **PtyAllgS_NoNa:** Parti bağlılığına ilişkin bir ölçüm (ör., 4.0, 5.0 gibi sürekli değerler).

-   **GovTrust_NoNa:** Hükümete güven düzeyine ilişkin bir ölçüm (ör., 3.0, 4.0 gibi sürekli değerler).

-   **TaxSpend_NoNa:** Vergi ve harcama politikalarına ilişkin görüşler (ör., 4.0, 5.0 gibi sürekli değerler).

-   **ECPolicy_NoNa:** Ekonomi politikalarına ilişkin görüşler (ör., 3.0, 5.0 gibi sürekli değerler).

-   **LetIn_NoNa:** Göçmen kabulüne ilişkin görüşler (ör., 4.0, 5.0 gibi sürekli değerler).

-   **EvCameron_NoNa:** David Cameron hakkındaki değerlendirmeler (ör., 3.0, 4.0 gibi sürekli değerler).

-   **EvSalmond_NoNa:** Alex Salmond hakkındaki değerlendirmeler (ör., 2.0, 4.0 gibi sürekli değerler).

-   **Knowind_NoNa:** Bağımsızlık referandumu hakkında bilgi düzeyi (ör., 4.0, 5.0 gibi sürekli değerler).

-   **liklyvt_NoNa:** Oy kullanma olasılığı (ör., 10.0).

-   **Refvote_NoNa:** Referandumda hangi yönde oy kullanıldığı (ör., 1.0, 3.0 gibi kategoriler).

-   **SEBenGB_NoNa:** İskoçya’nın Birleşik Krallık’a ekonomik faydalarına dair görüşler (ör., 1.0, 2.0 gibi sürekli değerler).

-   **RefvoteDum:** Referandum oyunun ikili kategorisi (ör., "1. Vote Yes", "0. Vote No").

-   **UKSpenGB_NoNa:** Birleşik Krallık harcamalarına ilişkin görüşler (ör., 4.0, 5.0 gibi sürekli değerler).

-   **ScotID_NoNa:** İskoç kimliğine dair görüşler (ör., 6.0, 7.0 gibi sürekli değerler).

-   **HEdQual2_NoNa:** Katılımcının eğitim düzeyi (ör., 4.0, 8.0 gibi kategoriler).

-   **Party_Labels:** Katılımcının siyasi parti tercihi (ör., "2. Labour").

-   **PartyFW_NoNa:** Siyasi partilere yönelik görüşlerin bir ölçütü (ör., 2.0, 3.0 gibi sürekli değerler).

-   **Dole_NoNa:** İşsizlik yardımlarına dair görüşler (ör., 1.0, 2.0 gibi sürekli değerler)

### 1. Veri Setini Okuma

```{r}
library(haven)
library(here)
library(tidyverse)
# Veri setini okuma
scottish <- read_dta((here("data", "scottish.dta")))

# İlk birkaç satıra göz atalım
head(scottish)


```

### 2. Veri Setinin Genel Yapısını Anlama

```{r}
# Veri setinin yapısını inceleme
glimpse(scottish)

```

```{r}

# Sütun isimlerini ve sayısını kontrol etme
colnames(scottish)
```

Temel veri manüplasyonu:

```{r}
scottish <- scottish %>%
  mutate(refvote = as_factor(RefvoteDum, levels="labels"),
                 pid = as_factor(Party_Labels, levels="labels"),
                 scot = ScotID_NoNa,
                 trust = as.numeric(fct_rev(as_factor(GovTrust_NoNa))), 
                 age = rage,
                 edu1 = na_if(HEdQual2_NoNa,7),#this is a filler step 
                 edu2 = recode(edu1, "8='7'"),
                 edu = as.numeric(fct_rev(as_factor(edu2)))) |> 
  mutate(pid1 = recode_factor(pid,
          "1. Conservative" = "1. Conservative",
          "2. Labour" = "2. Labour",
          "4. SNP" = "3. SNP",
          .default = NA_character_)) |> 
  mutate(trust_ordfac = ordered(as_factor(trust)))
```

### 3. Eksik Verilerin Kontrolü

```{r}
# Eksik veri yüzdesini hesaplama
scottish %>%
  summarise(across(everything(), ~ mean(is.na(.)) * 100)) %>%
  pivot_longer(cols = everything(), names_to = "Column", values_to = "Missing_Percentage") %>%
  arrange(desc(Missing_Percentage))

```

**Eksik Verilerin İşlenmesi**

Eksik veriler için temel stratejiler:

-   Eksik verileri silme:

-   Eksik verileri doldurma (ör:, sütun medyanı/ortalaması ile)

Biz ikinci yöntemi kullanalım:

```{r}
scottish_clean <- scottish %>%
  mutate(across(where(is.numeric), ~ ifelse(is.na(.), median(., na.rm = TRUE), .)))
```

Hala bazı verilerde "Not applicable" ve "Missing Values" ibareleri var. Bunların da temizlenmesi ya da ilgili değişkenin kullanımında farklı tekniklerin kullanılması gerekiyor.

```{r}
glimpse(scottish_clean)
```

### 4. **Temel Özet İstatistikler**

Analiz yapmadan önce, hangi sütunların kategorik veya sürekli olduğunu anlamak önemlidir. Bu bilgi dönüşüm veya filtreleme işlemlerinde yardımcı olur.

```{r}

# Sayısal değişkenleri seçme
numeric_vars <- scottish_clean %>%
  select(where(is.numeric))

# Sayısal değişkenlerin isimleri
colnames(numeric_vars)

```

```{r}
# Kategorik değişkenleri seçme
categorical_vars <- scottish_clean %>%
  select(where(is.factor))

# Kategorik değişkenlerin isimleri
colnames(categorical_vars)

```

### **5. Sayısal Değişkenler için** Dağılım ve Özet İstatistikler:

```{r}
# Temel istatistikler
scottish_clean %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    mean_trust = mean(trust, na.rm = TRUE),
    mean_edu = mean(edu, na.rm = TRUE),
    sd_age = sd(age, na.rm = TRUE),
    sd_trust = sd(trust, na.rm = TRUE),
    sd_edu = sd(edu, na.rm = TRUE)
  )
```

```{r}
library(ggplot2)

# Yaş histogramı ve yoğunluk grafiği
ggplot(scottish_clean, aes(x = age)) +
  geom_histogram(binwidth = 5, fill = "blue", alpha = 0.7) +
  geom_density(aes(y = ..count..), color = "red", size = 1) +
  labs(title = "Yaş Dağılımı", x = "Yaş", y = "Frekans")


# Eğitim histogramı ve yoğunluk grafiği
ggplot(scottish_clean, aes(x = edu)) +
  geom_histogram(binwidth = 1, fill = "purple", alpha = 0.7) +
  geom_density(aes(y = ..count..), color = "red", size = 1) +
  labs(title = "Eğitim Düzeyi Dağılımı", x = "Eğitim Düzeyi", y = "Frekans")

```

```{r}
library(ggplot2)

# Güven değişkeni bar grafiği
ggplot(scottish_clean, aes(x = trust)) +
  geom_bar(fill = "blue", alpha = 0.7) +
  labs(title = "Güven Dağılımı", x = "Güven", y = "Frekans")

# Eğitim değişkeni bar grafiği
ggplot(scottish_clean, aes(x = edu)) +
  geom_bar(fill = "purple", alpha = 0.7) +
  labs(title = "Eğitim Düzeyi Dağılımı", x = "Eğitim Düzeyi", y = "Frekans")

```

```{r}
# Spearman korelasyonu
scottish_clean %>%
  select(trust, edu, age) %>%
  cor(method = "spearman", use = "complete.obs")

# Kendall tau korelasyonu
scottish_clean %>%
  select(trust, edu, age) %>%
  cor(method = "kendall", use = "complete.obs")

```

```{r}
scottish_clean %>%
  group_by(edu) %>%
  summarise(mean_trust = mean(trust, na.rm = TRUE))
```

-   Güven (`trust`) ile eğitim (`edu`) arasında pozitif bir ilişki var, ancak bu ilişki oldukça zayıf.

-   Eğitim seviyesi arttıkça güven düzeyinin biraz artma eğiliminde olduğu söylenebilir, ancak bu etki istatistiksel olarak anlamlı olmayabilir.

-   Güven (`trust`) ile yaş (`age`) arasında çok zayıf ve neredeyse sıfır bir ilişki var.

-   Yaşın, bireylerin güven düzeyine belirgin bir etkisi olmadığı söylenebilir.

```{r}
# Parti bağlılığına göre yaş ortalamaları
scottish_clean %>%
  group_by(pid1) %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    sd_age = sd(age, na.rm = TRUE),
    count = n()
  )

```

```{r}
ggplot(scottish_clean, aes(x = pid1, y = age)) +
  geom_boxplot(fill = "blue", alpha = 0.7) +
  labs(title = "Parti Bağlılığına Göre Yaş Dağılımı", x = "Parti Bağlılığı", y = "Yaş")

```

```{r}
ggplot(scottish_clean, aes(x = factor(ScotID_NoNa), y = age)) +
  geom_boxplot(fill = "green", alpha = 0.7) +
  labs(title = "İskoç Kimliği Algısına Göre Yaş Dağılımı", x = "İskoç Kimliği Algısı", y = "Yaş")

```

```{r}
# Parti bağlılığı ve İskoç kimliği algısı arasındaki ilişki
# Çapraz tablo
cross_table <- table(scottish_clean$pid1, scottish_clean$ScotID_NoNa)

# Satır ve sütun toplamlarını ekleme
cross_table_with_totals <- addmargins(cross_table)

# Yüzde dağılımları (satır yüzdesi)
cross_table_row_percent <- prop.table(cross_table, margin = 1) * 100

# Yüzde dağılımları (sütun yüzdesi)
cross_table_col_percent <- prop.table(cross_table, margin = 2) * 100


```

```{r}
library(dplyr)
library(tidyr)

# Çapraz tablo
cross_table <- table(scottish_clean$pid1, scottish_clean$ScotID_NoNa)

# Çapraz tabloyu bir veri çerçevesine dönüştürme
cross_table_df <- as.data.frame(cross_table)

# Satır toplamlarını ekleme
cross_table_totals <- cross_table_df %>%
  group_by(Var1) %>%
  summarise(
    Total = sum(Freq)
  )

# Sütun toplamlarını ekleme
column_totals <- cross_table_df %>%
  group_by(Var2) %>%
  summarise(
    Total = sum(Freq)
  )

# Çapraz tabloyu görselleştirme için düzenleme
combined_table <- cross_table_df %>%
  spread(key = Var2, value = Freq) %>%
  left_join(cross_table_totals, by = c("Var1" = "Var1"))

```

```{r}
ggplot(cross_table_df, aes(x = Var1, y = Freq, fill = Var2)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
    title = "Parti Bağlılığı ve İskoç Kimliği Dağılımı",
    x = "Parti Bağlılığı",
    y = "Frekans",
    fill = "İskoç Kimliği"
  ) +
  theme_minimal()

```

```{r}
# Parti bağlılığına göre ortalamalar
scottish_clean %>%
  group_by(pid1) %>%
  summarise(
    mean_leftrigh = mean(leftrigh, na.rm = TRUE),
    mean_libauth = mean(libauth, na.rm = TRUE),
    count = n()
  )

```

```{r}
library(ggplot2)

# Parti bağlılığına göre leftrigh kutu grafiği
ggplot(scottish_clean, aes(x = pid1, y = leftrigh)) +
  geom_boxplot(fill = "blue", alpha = 0.7) +
  labs(title = "Parti Bağlılığı ve Sol-Sağ Eğilim", x = "Parti Bağlılığı", y = "Sol-Sağ Eğilim")

# Parti bağlılığına göre libauth kutu grafiği
ggplot(scottish_clean, aes(x = pid1, y = libauth)) +
  geom_boxplot(fill = "green", alpha = 0.7) +
  labs(title = "Parti Bağlılığı ve Liberal-Otoriter Eğilim", x = "Parti Bağlılığı", y = "Liberal-Otoriter Eğilim")

```

**`employmentdum`** (çalışma durumu: 0 = işsiz, 1 = çalışıyor) ve **`edu`** (eğitim düzeyi) arasında bir ilişki olup olmadığını test edebiliriz.

```{r}
# Satır yüzdeleri
prop.table(table(scottish_clean$employmentdum, scottish_clean$edu), margin = 1) * 100

```

Genel olarak işsizler, daha düşük eğitim seviyelerinde yoğunlaşıyor. İşsiz bireylerin en büyük oranı **3. Eğitim Düzeyinde (%29.2)** ve ardından **1. Eğitim Düzeyinde (%25)**.

Çalışanlar, her eğitim düzeyinde temsil edilirken, daha düşük seviyelerden yüksek seviyelere doğru azalan bir eğilim gösteriyor.

```{r}
# Ki-kare testi
chi_test <- chisq.test(table(scottish_clean$employmentdum, scottish_clean$edu))
chi_test

```

-   **Null Hipotez (H₀):** `employmentdum` (çalışma durumu) ile `edu` (eğitim düzeyi) arasında bir ilişki yoktur. Bu iki değişken birbirinden bağımsızdır.

-   **Alternatif Hipotez (H₁):** `employmentdum` ile `edu` arasında bir ilişki vardır. Bu iki değişken bağımsız değildir.

<!-- -->

-   **p-değeri \< 0.05** olduğundan, null hipotezi reddediyoruz.

-   Bu, **çalışma durumu** (`employmentdum`) ile **eğitim düzeyi** (`edu`) arasında **istatistiksel olarak anlamlı bir ilişki olduğunu** gösterir.

-   Eğitim düzeyindeki değişim, bireylerin çalışma durumunu etkileyebilir veya en azından bu iki değişken bağımsız değildir.

Bağımlı değişkenin (**`RefvoteDum`**) diğer bağımsız değişkenler tarafından nasıl etkilendiğini modellemek için bir **lojistik regresyon modeli** kullanabiliriz. Çünkü bağımlı değişkenimiz ikili (binary: 0 = Hayır, 1 = Evet) bir değişkendir.

-   Bağımsız değişkenler: **`pid1` (parti bağlılığı), `edu` (eğitim düzeyi), `age` (yaş), `rsex` (cinsiyet), `libauth` (liberal-otoriter eğilim), `employmentdum` (istihdam durumu)**.

```{r}

# Lojistik regresyon modeli
logit_model <- glm(RefvoteDum ~ pid1 + edu + age + rsex + libauth + employmentdum,
                   data = scottish_clean, family = binomial)

# Modelin özetini görüntüleme
summary(logit_model)

```

### **1. Modelin Genel Değerlendirmesi**

Null deviance ile residual deviance arasındaki fark modelin açıklama gücünü gösterir. Modelin residual deviance'ındaki önemli düşüş, bağımsız değişkenlerin bağımlı değişkeni açıklamada etkili olduğunu gösterir.

### **2. Bağımsız Değişkenlerin Yorumu**

Her bir bağımsız değişkenin **katsayı (Estimate)**, **p-değeri (Pr(\>\|z\|))** ve anlamlılığına göre yorumları:

#### **Intercept (Sabit Terim):**

-   **Katsayı = -1.760**, **p = 0.020**

    -   Tüm bağımsız değişkenlerin etkisi sıfır olduğunda "Evet" oyu verme olasılığı negatif (log-odds olarak).

#### **`pid1` (Parti Bağlılığı):**

-   **Labour (Katsayı = 1.932, p \< 0.001):**

    -   Labour Partisi’ne bağlılık, "Evet" oyu verme olasılığını artırır.

    -   Odds oranı: $e^{1.932} \approx 6.91$ , yani Labour’a bağlı bireylerin "Evet" oyu verme olasılığı, Conservative’e bağlı bireylere kıyasla yaklaşık 7 kat daha fazladır.

-   **SNP (Katsayı = 4.051, p \< 0.001):**

    -   SNP’ye bağlılık, "Evet" oyu verme olasılığını çok güçlü bir şekilde artırır.

    -   Odds oranı: $e^{4.051} \approx 57.4$ , yani SNP’ye bağlı bireylerin "Evet" oyu verme olasılığı Conservative’e bağlı bireylerden yaklaşık 57 kat daha fazladır.

#### **`edu` (Eğitim Düzeyi):**

-   **Katsayı = 0.0167, p = 0.729:**

    -   Eğitim düzeyinin "Evet" oyu verme üzerinde anlamlı bir etkisi yoktur (p \> 0.05).

#### **`age` (Yaş):**

-   **Katsayı = -0.0039, p = 0.461:**

    -   Yaşın "Evet" oyu verme üzerinde anlamlı bir etkisi yoktur (p \> 0.05).

#### **`rsex` (Cinsiyet):**

-   **Katsayı = -0.637, p \< 0.001:**

    -   Erkeklerin "Evet" oyu verme olasılığı kadınlara göre daha düşüktür.

    -   Odds oranı: $e^{-0.637} \approx 0.53$, yani erkeklerin "Evet" oyu verme olasılığı kadınlara göre %47 daha azdır.

#### **`libauth` (Liberal-Otoriter Eğilim):**

-   **Katsayı = -0.146, p = 0.029:**

    -   Daha otoriter bir eğilime sahip bireylerin "Evet" oyu verme olasılığı azalır.

    -   Odds oranı: $e^{-0.146} \approx 0.86$ , yani otoriter eğilimdeki bireylerin "Evet" oyu verme olasılığı liberal eğilimde olanlara kıyasla %14 daha düşüktür.

#### **`employmentdum` (İstihdam Durumu):**

-   **Katsayı = -0.277, p = 0.470:**

    -   İstihdam durumunun "Evet" oyu verme üzerinde anlamlı bir etkisi yoktur (p \> 0.05).

```{r}
# Tahmin edilen olasılıkları hesaplama
predicted_prob <- predict(logit_model, type = "response")

# İlk birkaç tahmin
head(predicted_prob)

```

-   Modelimiz, her bir birey için "Evet" oyu verme olasılıklarını tahmin ediyor.

-   İlk birkaç tahminde, bireylerin genellikle "Hayır" oyu verme olasılığının daha yüksek olduğunu görebiliyoruz.
